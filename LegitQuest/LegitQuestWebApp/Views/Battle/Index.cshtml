
@{
    ViewBag.Title = "Index";
}

@Scripts.Render("~/bundles/jquery");
@Scripts.Render("~/bundles/signalR");
@Scripts.Render("~/bundles/react");
<script src="~/signalr/hubs"></script>
<script src="~/Scripts/battle/BattleDisplay.jsx"></script>
<script src="~/Scripts/battle/MessageBox.jsx"></script>
<script src="~/Scripts/battle/CharacterDisplay.jsx"></script>

<style>
    .message-box
    {
        height:25vh;
        overflow:auto;
        position:relative;
    }

    .battle-container
    {
        height:100vh;
    }

    .characters-container{
        height:75vh;
    }
</style>

<h2>Battle</h2>

<div id="container">

</div>

<script type="text/javascript">
    React.render(React.createElement(BattleDisplay, { messages: ["MESSAGE"] }), document.getElementById("container"));
</script>

@*<div id="container" class="battle-container container-fluid">
    @*<div id="messageBox" class="text-primary message-box">

    </div>
    <script type="text/javascript">
        var messageBoxElement = React.createElement(MessageBox, {});
        React.render(messageBoxElement, document.getElementById("container"));
    </script>
    <div id="charactersContainer" class="characters-container">

    </div>
</div>*@

@*<script type="text/javascript">
    $(function () {
        var clientConnection = $.connection.battleHub;

        clientConnection.client.processMessage = function (message) {
            if(message.message != null && message.message != "")
            {
                messageBoxElement.setState({ messages: this.messages + message });
                //messageBoxElement.getProperties().messages.push(message.message);
               // messageBox.innerHTML = message.message + "<br />" + messageBox.innerHTML;
            }
        }

        $.connection.hub.start().done(function()
        {
            clientConnection.server.startCombat();
        })
    });
</script>*@

